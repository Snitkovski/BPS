Процедура ЗаполнитьАвто() Экспорт
	ЗаполнитьТЧНастройкиПользователей();
	ЗаполнитьТЧРегистрАдресации();
КонецПроцедуры 

Процедура ЗаполнитьТЧНастройкиПользователей() Экспорт
	ТЧНастройкиПользователей.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Пользователи.Ссылка КАК Пользователь,
	|	бпсНастройкиПользователей.АдресЭлектроннойПочты,
	|	бпсНастройкиПользователей.НеУведомлятьОЗадачахПочтой
	|ИЗ
	//|	Справочник.Пользователи КАК Пользователи
	|	Справочник.Users КАК Пользователи
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бпсНастройкиПользователей КАК бпсНастройкиПользователей
	|		ПО Пользователи.Ссылка = бпсНастройкиПользователей.Пользователь
	|ГДЕ
	|	НЕ Пользователи.ПометкаУдаления
	|	И (бпсНастройкиПользователей.АдресЭлектроннойПочты ЕСТЬ NULL 
	|			ИЛИ бпсНастройкиПользователей.АдресЭлектроннойПочты = """")
	|	И (бпсНастройкиПользователей.НеУведомлятьОЗадачахПочтой ЕСТЬ NULL 
	|		ИЛИ бпсНастройкиПользователей.НеУведомлятьОЗадачахПочтой = ЛОЖЬ)";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			СтрокаТЧНастройкиПользователей=ТЧНастройкиПользователей.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТЧНастройкиПользователей,Выборка);
			СтрокаТЧНастройкиПользователей.Пометка = Истина;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры 

Процедура ЗаполнитьТЧРегистрАдресации() Экспорт
	ТЧРегистрАдресации.Очистить();
	Если ПолучитьТолькоТеЗаписиДляКоторыхНеЗаполненыПользователи Тогда
		ЗаполнитьТЧРегистрАдресацииПолучитьНезаполненныеПары();	
	Иначе
	 	Если ЗначениеЗаполнено(ПредметСогласования) Тогда
			ЗаполнитьТЧРегистрАдресацииПоПредметуСогласования();
		Иначе
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = NStr("ru = 'Заполните предмет согласования'");
			Сообщение.Поле = "Объект.ПредметСогласования";
			Сообщение.Сообщить();
		Конецесли;
	Конецесли;
КонецПроцедуры 

Процедура ЗаполнитьТЧРегистрАдресацииПолучитьНезаполненныеПары() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	бпсПредметыСогласованийОпределениеЛистаСогласования.РольАдресации,
	|	бпсПредметыСогласованийОпределениеЛистаСогласования.ПодразделениеАдресации
	|ПОМЕСТИТЬ ВТРолиИПодразделения
	|ИЗ
	|	Справочник.бпсПредметыСогласований.ОпределениеЛистаСогласования КАК бпсПредметыСогласованийОпределениеЛистаСогласования
	|ГДЕ
	|	НЕ бпсПредметыСогласованийОпределениеЛистаСогласования.Ссылка.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	бпсЗадача.РольАдресации,
	|	бпсЗадача.ПодразделениеАдресации
	|ИЗ
	|	Задача.бпсЗадача КАК бпсЗадача
	|ГДЕ
	|	НЕ бпсЗадача.Выполнена
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	бпсРегистрАдресации.РольАдресации,
	|	бпсРегистрАдресации.ПодразделениеАдресации
	|ПОМЕСТИТЬ ВТРегистрАдресации
	|ИЗ
	|	РегистрСведений.бпсРегистрАдресации КАК бпсРегистрАдресации
	|ГДЕ
	|	(бпсРегистрАдресации.РольАдресации, бпсРегистрАдресации.ПодразделениеАдресации) В
	|			(ВЫБРАТЬ
	|				ВТРолиИПодразделения.РольАдресации,
	|				ВТРолиИПодразделения.ПодразделениеАдресации
	|			ИЗ
	|				ВТРолиИПодразделения)
	//|	И бпсРегистрАдресации.Пользователь <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|	И бпсРегистрАдресации.Пользователь <> ЗНАЧЕНИЕ(Справочник.Users.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТРолиИПодразделения.РольАдресации,
	|	ВТРолиИПодразделения.ПодразделениеАдресации
	|ИЗ
	|	ВТРолиИПодразделения КАК ВТРолиИПодразделения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРегистрАдресации КАК ВТРегистрАдресации
	|		ПО ВТРолиИПодразделения.РольАдресации = ВТРегистрАдресации.РольАдресации
	|			И ВТРолиИПодразделения.ПодразделениеАдресации = ВТРегистрАдресации.ПодразделениеАдресации
	|ГДЕ
	|	(ВТРегистрАдресации.РольАдресации ЕСТЬ NULL 
	|			ИЛИ ВТРегистрАдресации.ПодразделениеАдресации ЕСТЬ NULL )";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда		
		Возврат;
	Конецесли;
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СтрокаТЧРегистрАдресации = ТЧРегистрАдресации.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧРегистрАдресации,Выборка);
		СтрокаТЧРегистрАдресации.Пометка = Истина;
	КонецЦикла;		
КонецПроцедуры 

Процедура ЗаполнитьТЧРегистрАдресацииПоПредметуСогласования() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	бпсПредметыСогласованийОпределениеЛистаСогласования.НомерСтроки КАК Очередь,
	|	бпсПредметыСогласованийОпределениеЛистаСогласования.РольАдресации,
	|	бпсПредметыСогласованийОпределениеЛистаСогласования.ПодразделениеАдресации
	|ПОМЕСТИТЬ ВТРолиИПодразделения
	|ИЗ
	|	Справочник.бпсПредметыСогласований.ОпределениеЛистаСогласования КАК бпсПредметыСогласованийОпределениеЛистаСогласования
	|ГДЕ
	|	бпсПредметыСогласованийОпределениеЛистаСогласования.Ссылка = &ПредметСогласования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	бпсРегистрАдресации.Пользователь,
	|	бпсРегистрАдресации.РольАдресации,
	|	бпсРегистрАдресации.ПодразделениеАдресации
	|ПОМЕСТИТЬ ВТРегистрАдресации
	|ИЗ
	|	РегистрСведений.бпсРегистрАдресации КАК бпсРегистрАдресации
	|ГДЕ
	|	(бпсРегистрАдресации.РольАдресации, бпсРегистрАдресации.ПодразделениеАдресации) В
	|			(ВЫБРАТЬ
	|				ВТРолиИПодразделения.РольАдресации,
	|				ВТРолиИПодразделения.ПодразделениеАдресации
	|			ИЗ
	|				ВТРолиИПодразделения)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТРолиИПодразделения.Очередь КАК Очередь,
	|	ВТРегистрАдресации.Пользователь,
	|	ВТРолиИПодразделения.РольАдресации,
	|	ВТРолиИПодразделения.ПодразделениеАдресации
	|ИЗ
	|	ВТРолиИПодразделения КАК ВТРолиИПодразделения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРегистрАдресации КАК ВТРегистрАдресации
	|		ПО ВТРолиИПодразделения.РольАдресации = ВТРегистрАдресации.РольАдресации
	|			И ВТРолиИПодразделения.ПодразделениеАдресации = ВТРегистрАдресации.ПодразделениеАдресации
	|
	|УПОРЯДОЧИТЬ ПО
	|	Очередь";

	Запрос.УстановитьПараметр("ПредметСогласования",ПредметСогласования);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда		
		Возврат;
	Конецесли;
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СтрокаТЧРегистрАдресации = ТЧРегистрАдресации.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧРегистрАдресации,Выборка);
		СтрокаТЧРегистрАдресации.Пометка = Ложь;
	КонецЦикла;		
КонецПроцедуры 

Процедура СформироватьЗаписиВРегистрАдресации() Экспорт
	Для каждого СтрокаТЧРегистрАдресации из ТЧРегистрАдресации цикл
		Если НЕ СтрокаТЧРегистрАдресации.Пометка Тогда
			Продолжить;
		Конецесли;
		Если НЕ ЗначениеЗаполнено(СтрокаТЧРегистрАдресации.Пользователь) Тогда
			Сообщить(NStr("ru = 'Ошибка! Необходимо заполнить Пользователя в строке '") + СтрокаТЧРегистрАдресации.НомерСтроки);
			Продолжить;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(СтрокаТЧРегистрАдресации.РольАдресации) Тогда
			Сообщить(NStr("ru = 'Ошибка! Необходимо заполнить РольАдресации в строке '") + СтрокаТЧРегистрАдресации.НомерСтроки);
			Продолжить;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(СтрокаТЧРегистрАдресации.ПодразделениеАдресации) Тогда
			Сообщить(NStr("ru = 'Ошибка! Необходимо заполнить ПодразделениеАдресации в строке '") + СтрокаТЧРегистрАдресации.НомерСтроки);
			Продолжить;
		КонецЕсли;
		
		МенеджерЗаписи = РегистрыСведений.бпсРегистрАдресации.СоздатьМенеджерЗаписи();	
		МенеджерЗаписи.Пользователь = СтрокаТЧРегистрАдресации.Пользователь;
		МенеджерЗаписи.РольАдресации = СтрокаТЧРегистрАдресации.РольАдресации;
		МенеджерЗаписи.ПодразделениеАдресации = СтрокаТЧРегистрАдресации.ПодразделениеАдресации;
		МенеджерЗаписи.Записать();
		Сообщить(StrTemplate(NStr("ru = 'Сохранена настройка для
                                   |Пользователь [%1]
                                   |РольАдресации [%2]
                                   |ПодразделениеАдресации [%3]'"), 
						СтрокаТЧРегистрАдресации.Пользователь, 
						СтрокаТЧРегистрАдресации.РольАдресации, 
						СтрокаТЧРегистрАдресации.ПодразделениеАдресации));
	Конеццикла;
КонецПроцедуры 

Процедура СформироватьЗаписиНастройкиПользователей() Экспорт
	Для каждого СтрокаТЧНастройкиПользователей из ТЧНастройкиПользователей цикл
		Если НЕ СтрокаТЧНастройкиПользователей.Пометка Тогда
			Продолжить;
		Конецесли;
		Если НЕ ЗначениеЗаполнено(СтрокаТЧНастройкиПользователей.Пользователь) Тогда
			Сообщить(NStr("ru = 'Ошибка! Необходимо заполнить Пользователя в строке '") +
				СтрокаТЧНастройкиПользователей.НомерСтроки);
			Продолжить;
		КонецЕсли;
		Если НЕ СтрокаТЧНастройкиПользователей.НеУведомлятьОЗадачахПочтой
			И НЕ ЗначениеЗаполнено(СтрокаТЧНастройкиПользователей.АдресЭлектроннойПочты) Тогда
			Сообщить(NStr("ru = 'Ошибка! Необходимо заполнить АдресЭлектроннойПочты в строке '") +
				СтрокаТЧНастройкиПользователей.НомерСтроки);
			Продолжить;
		КонецЕсли;
		
		МенеджерЗаписи = РегистрыСведений.бпсНастройкиПользователей.СоздатьМенеджерЗаписи();	
		МенеджерЗаписи.Пользователь = СтрокаТЧНастройкиПользователей.Пользователь;
		МенеджерЗаписи.АдресЭлектроннойПочты = СтрокаТЧНастройкиПользователей.АдресЭлектроннойПочты;
		МенеджерЗаписи.НеУведомлятьОЗадачахПочтой = СтрокаТЧНастройкиПользователей.НеУведомлятьОЗадачахПочтой;
		МенеджерЗаписи.ИДПользователяТелеграмм = СтрокаТЧНастройкиПользователей.ИДПользователяТелеграмм;
		МенеджерЗаписи.Записать();
		Сообщить(StrTemplate(NStr("ru = 'Сохранена настройка для
                                   |Пользователь [%1]
                                   |АдресЭлектроннойПочты [%2]
                                   |НеУведомлятьОЗадачахПочтой [%3]
                                   |ИДПользователяТелеграмм [%4]'"), СтрокаТЧНастройкиПользователей.Пользователь, 
			СтрокаТЧНастройкиПользователей.АдресЭлектроннойПочты,
			СтрокаТЧНастройкиПользователей.НеУведомлятьОЗадачахПочтой,
			СтрокаТЧНастройкиПользователей.ИДПользователяТелеграмм));
	Конеццикла;

КонецПроцедуры
