Процедура ОтправитьНаСогласование(ДопПараметры) Экспорт
	ОбъектБД = ДопПараметры.ОбъектБД;
	ПредметСогласования = ДопПараметры.ПредметСогласования;
	Согласование = ДопПараметры.Согласование;
	
	
	ТребуетсяСогласование = ПолучитьТребуетсяЛиСогласование(ДопПараметры);
	Если НЕ ТребуетсяСогласование Тогда
		ВызватьИсключение NStr("ru = 'Ошибка! Нет алгоритма, если не требуется согласование!'");
	Иначе
		Если ЗначениеЗаполнено(Согласование) Тогда			
			Если Согласование.Стартован <> Согласование.Завершен Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = NStr("ru = 'Ошибка!
                                       |Уже есть запущенный бизнес процесс ""Согласование"", для этого объекта.
                                       |Используйте кнопку ""Открыть процесс согласования"" для его просмотра.'");
				Сообщение.Сообщить();
				Возврат;
			ИначеЕсли Согласование.Завершен Тогда
				ПроцессОбъект = БизнесПроцессы.бпсСогласование.СоздатьБизнесПроцесс();
			ИначеЕсли НЕ Согласование.Стартован Тогда
				ПроцессОбъект = Согласование.ПолучитьОбъект();						
			Иначе
				ВызватьИсключение NStr("ru = 'Ошибка при отправке на утверждение!'");
			Конецесли;
		Иначе
			ПроцессОбъект = БизнесПроцессы.бпсСогласование.СоздатьБизнесПроцесс();	
		Конецесли;
		
		ПроцессОбъект.Дата = ТекущаяДата();
		
		ВТДопПараметры = Новый Структура();
		ВТДопПараметры.Вставить("ОбъектБД", ОбъектБД);
		ВТДопПараметры.Вставить("ПредметСогласования", ПредметСогласования);			
		ПроцессОбъект.Заполнить(ВТДопПараметры);
		
		ПроцессОбъект.Записать();
		ПроцессОбъект.Старт();
	Конецесли;
	
КонецПроцедуры 

Процедура ОтменитьСогласование(ДопПараметры) Экспорт
	ОбъектБД = ДопПараметры.ОбъектБД;
	
	МассивОбъектовБД = Новый Массив();
	МассивОбъектовБД.Добавить(ОбъектБД);
	ДопПараметры.Вставить("МассивОбъектовБД",МассивОбъектовБД);
	
	ПредметСогласования = ДопПараметры.ПредметСогласования;
	Согласование = ДопПараметры.Согласование;
		
	ТЗНеВыполненныеЗадачи = ПолучитьТЗНеВыполненныеЗадачи(ДопПараметры);
	ПараметрыОтбора = Новый Структура();
	ПараметрыОтбора.Вставить("ОбъектБД",ОбъектБД);
	НайденныеСтроки = ТЗНеВыполненныеЗадачи.НайтиСтроки(ПараметрыОтбора);
	ВсегоНайденныеСтроки = НайденныеСтроки.Количество();	
	
	Если ВсегоНайденныеСтроки = 0 Тогда
		Статус = ПредопределенноеЗначение("Справочник.бпсСтатусыОбъектов.Согласование_Отклонено");
		ВТДопПараметры = Новый Структура();
		ВТДопПараметры.Вставить("ОбъектБД",ОбъектБД);
		ВТДопПараметры.Вставить("ПредметСогласования",ПредметСогласования);
		ВТДопПараметры.Вставить("Статус",Статус);		
		УстановитьСтатус(ВТДопПараметры);
		
		ТекстСообщить = StrTemplate(NStr("ru = 'Отменено согласование для ОбъектБД [%1]
                                         |ПредметСогласования [%2]'"), ОбъектБД, ПредметСогласования);	
		Сообщить(ТекстСообщить);
		Возврат;
	Конецесли;
	
	//Если есть не выполненные задачи по запущенному согласованию
	Для каждого СтрокаТЗНеВыполненныеЗадачи из НайденныеСтроки цикл
		ЗадачаСсылка = СтрокаТЗНеВыполненныеЗадачи.ЗадачаСсылка;
		Если ЗадачаСсылка.Выполнена Тогда
			Продолжить;
		Конецесли;
		БизнесПроцесс = ЗадачаСсылка.БизнесПроцесс;		
		Если ТипЗнч(БизнесПроцесс) = Тип("БизнесПроцессСсылка.бпсСогласование") Тогда	
			
			БизнесПроцессОбъект = БизнесПроцесс.ПолучитьОбъект();
			БизнесПроцессОбъект.РазрешеноПовторноеСогласование = Ложь;
			
			//ТекстОтменыЗаявки = "Отменено пользователем " + ПараметрыСеанса.ТекущийПользователь;
			ТекстОтменыЗаявки = NStr("ru = 'Отменено пользователем '") + ПараметрыСеанса.CurrentUser;
			
			КомандаСогласования = ПредопределенноеЗначение("Перечисление.бпсКомандыСогласования.НеСогласовано");
			ВТДопПараметрыОтмены = Новый Структура();
			ВТДопПараметрыОтмены.Вставить("ЗадачаСсылка", ЗадачаСсылка);				
			ВТДопПараметрыОтмены.Вставить("Рецензия", ТекстОтменыЗаявки);	
			ВТДопПараметрыОтмены.Вставить("КомандаСогласования", КомандаСогласования);
			
			НачатьТранзакцию();
			
			Попытка
				БизнесПроцессОбъект.Записать();
			Исключение
				ВызватьИсключение StrTemplate(NStr("ru = 'Ошибка! Не удалось записать БП: %1
                                                    |Описание ошибки [%2]'"), БизнесПроцесс, ОписаниеОшибки());
			КонецПопытки;
			
			Попытка
				БизнесПроцессОбъект.ВыполнитьЗадачу(ВТДопПараметрыОтмены);
			Исключение
				ВызватьИсключение StrTemplate(NStr("ru = 'Ошибка! Не удалось отменить задачу: %1 БП: %2
                                                    |Описание ошибки [%3]'"), ЗадачаСсылка, БизнесПроцесс, ОписаниеОшибки());
			КонецПопытки;
			
			ЗафиксироватьТранзакцию();
		Иначе
			ВызватьИсключение "Ошибка! Не удалось отменить задачу: "+ЗадачаСсылка+" БП: "+БизнесПроцесс;
		Конецесли;	
	Конеццикла;
	
	ТекстСообщить = StrTemplate(NStr("ru = 'Отменено согласование для ОбъектБД [%1]
                                      |ПредметСогласования [%2]'"), ОбъектБД, ПредметСогласования);	
	Сообщить(ТекстСообщить);
КонецПроцедуры 

Процедура УстановитьСтатусВручную(ДопПараметры) Экспорт
	Если ДопПараметры.Свойство("МассивОбъектовБД") Тогда
		МассивОбъектовБД = ДопПараметры.МассивОбъектовБД;
	Иначе
		МассивОбъектовБД = Новый Массив();
		МассивОбъектовБД.Добавить(ДопПараметры.ОбъектБД);
	Конецесли;
	
	ПредметСогласования = ДопПараметры.ПредметСогласования;
	Согласование = ДопПараметры.Согласование;
	пСтатус = ДопПараметры.Статус;
		
	ТЗНеВыполненныеЗадачи = ПолучитьТЗНеВыполненныеЗадачи(ДопПараметры);	
	Если ТЗНеВыполненныеЗадачи.Количество() > 0 Тогда
		Сообщить(NStr("ru = 'Ошибка! Нельзя установить статус вручную, т.к. еще идет согласование.
                       |Необходимо или дождаться окончания согласования или отменить согласование.
                       |Затем повторить попытку.'"));
		Возврат;
	Конецесли;	
	
	ВТДопПараметры = Новый Структура();
	ВТДопПараметры.Вставить("МассивОбъектовБД",МассивОбъектовБД);
	ВТДопПараметры.Вставить("ПредметСогласования",ПредметСогласования);
	ВТДопПараметры.Вставить("Статус",пСтатус);		
	УстановитьСтатус(ВТДопПараметры);
	
	Для каждого пОбъектБД из МассивОбъектовБД цикл
		ТекстСообщить = StrTemplate(NStr("ru = 'Установлен статус [%1] для ОбъектБД [%2]
                                          |ПредметСогласования [%3]'"), пСтатус, пОбъектБД, ПредметСогласования);
		Сообщить(ТекстСообщить);
	Конеццикла;	
КонецПроцедуры 

Процедура УстановитьСтатус(ДопПараметры)
	
	ТЗОбъектыБД = РегистрыСведений.бпсСтатусыОбъектов.ПолучитьОписаниеТЗОбъектыБД();
	
	Если ДопПараметры.Свойство("МассивОбъектовБД") Тогда
		МассивОбъектовБД = ДопПараметры.МассивОбъектовБД;
	Иначе
		МассивОбъектовБД = Новый Массив();
		МассивОбъектовБД.Добавить(ДопПараметры.ОбъектБД);
	Конецесли;
	
	Для каждого пОбъектБД из МассивОбъектовБД цикл
		СтрокаТЗОбъектыБД = ТЗОбъектыБД.Добавить();
		СтрокаТЗОбъектыБД.ОбъектБД = пОбъектБД;
		СтрокаТЗОбъектыБД.ПредметСогласования = ДопПараметры.ПредметСогласования;
		СтрокаТЗОбъектыБД.Статус = ДопПараметры.Статус;
	Конеццикла;
	
	ВТДопПараметры = Новый Структура();
	ВТДопПараметры.Вставить("ДатаИзмененияСтатуса", ТекущаяДата());
	ВТДопПараметры.Вставить("ПредметСогласования", ДопПараметры.ПредметСогласования);
	ВТДопПараметры.Вставить("Статус",ДопПараметры.Статус);	
	//ВТДопПараметры.Вставить("Комментарий","Отменено пользователем: " + ПараметрыСеанса.ТекущийПользователь);
	ВТДопПараметры.Вставить("Комментарий", NStr("ru = 'Отменено пользователем: '") + ПараметрыСеанса.CurrentUser);
	ВТДопПараметры.Вставить("ТЗОбъектыБД", ТЗОбъектыБД);
	
	Документы.бпсРегистрацияСтатусаОбъекта.УстановитьСтатусыОбъектов(ВТДопПараметры);	
КонецПроцедуры 


Функция ПолучитьТЗНеВыполненныеЗадачи(ДопПараметры) Экспорт 
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Задача.Ссылка КАК ЗадачаСсылка,
	|	ВЫРАЗИТЬ(Задача.БизнесПроцесс КАК БизнесПроцесс.бпсСогласование).ОбъектБД КАК ОбъектБД,
	|	Задача.Пользователь,
	|	Задача.РольАдресации,
	|	Задача.ПодразделениеАдресации
	|ИЗ
	|	Задача.бпсЗадача КАК Задача
	|ГДЕ
	|	НЕ Задача.Выполнена
	|	И Задача.БизнесПроцесс ССЫЛКА БизнесПроцесс.бпсСогласование
	|	И ВЫРАЗИТЬ(Задача.БизнесПроцесс КАК БизнесПроцесс.бпсСогласование).ОбъектБД В(&МассивОбъектовБД)
	|	И ВЫРАЗИТЬ(Задача.БизнесПроцесс КАК БизнесПроцесс.бпсСогласование).ПредметСогласования = &ПредметСогласования
	|");
	
	Если ДопПараметры.Свойство("МассивОбъектовБД") Тогда
		МассивОбъектовБД = ДопПараметры.МассивОбъектовБД;
	Иначе
		МассивОбъектовБД = Новый Массив();
		МассивОбъектовБД.Добавить(ДопПараметры.ОбъектБД);
	Конецесли;	
	
	Запрос.УстановитьПараметр("МассивОбъектовБД", МассивОбъектовБД);
	Запрос.УстановитьПараметр("ПредметСогласования", ДопПараметры.ПредметСогласования);

	Возврат Запрос.Выполнить().Выгрузить(); 
КонецФункции //ПолучитьТЗНеВыполненныеЗадачи()

Функция ПолучитьТребуетсяЛиСогласование(ДопПараметры) 
	пТребуетсяЛиСогласование = Истина;
	Возврат пТребуетсяЛиСогласование;
КонецФункции
